{% extends "BackendBundle:Layouts:2columns.html.twig" %}

{% block breadcrumb %}
    {{ setCrumbs({'Profile': ''}) }}
    {{ parent() }}
{% endblock %}

{% block content %}
    <div class="row">
        <div class="col-md-12">
            <div class="card-item">
                <div class="p-overview">

                </div>

                <div class="p-main clearfix">
                    <!-- SUMMARY -->
                    <div id="summary" class="p-block">
                        <div class="p-block-header">
                            <h2><i class="fa fa-folder-open"></i>{{ 'Summary' | trans }}</h2>
                            <ul class="actions">
                                <li>
                                    <a href="" data-action="edit" data-target="#summary">
                                        <i class="fa fa-pencil"></i>
                                    </a>
                                </li>
                            </ul>
                        </div>

                        <div class="p-block-body">
                            {% include 'BackendBundle:Admin:Profile/summary.html.twig' %}
                        </div>
                    </div>

                    <!-- BASIC INFORMATION -->
                    <div id="personal-data" class="p-block">
                        <div class="p-block-header">
                            <h2><i class="fa fa-user"></i>{{ 'Basic information' | trans }}</h2>
                            <ul class="actions">
                                <li>
                                    <a href="" data-action="edit" data-target="#personal-data">
                                        <i class="fa fa-pencil"></i>
                                    </a>
                                </li>
                            </ul>
                        </div>

                        <div class="p-block-body">
                            {% include 'BackendBundle:Admin:Profile/personal-data.html.twig' %}
                        </div>
                    </div>

                    <!-- BASIC INFORMATION -->
                    <div id="contact-data" class="p-block">
                        <div class="p-block-header">
                            <h2><i class="fa fa-phone"></i>{{ 'Contact information' | trans }}</h2>
                            <ul class="actions">
                                <li>
                                    <a href="" data-action="edit" data-target="#contact-data">
                                        <i class="fa fa-pencil"></i>
                                    </a>
                                </li>
                            </ul>
                        </div>

                        <div class="p-block-body">
                            {% include 'BackendBundle:Admin:Profile/contact-data.html.twig' %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {% include 'BackendBundle:Scripts:xmlhttprequest-helper.html.twig' %}
    {% include 'BackendBundle:Scripts:image-thumbnail-helper.html.twig' %}
    <script>
        window.addEventListener('load', function(evt) {
            //ImageThumbnail.init('#multiple_images_images', '#upload-thumbnails', 'image-thumbnail-avatar');
            var forms = document.querySelectorAll('.p-main form');

            var forEach = Array.prototype.forEach;
console.info(forms);
            forEach.call(forms, function(form) {
                var formInputs = form.querySelectorAll('.form-control');
                forEach.call(formInputs, function(input) {
                    input.dataset.currentValue = input.value;
                });

                var resetBtn = form.querySelector('button[type="reset"]');
                resetBtn.addEventListener('click', function(evt) {
                    evt.preventDefault();
                    // If the user exits from edit mode, input value must be restored
                    forEach.call(formInputs, function(input) {
                        input.value = input.dataset.currentValue;
                    });
                });

                form.addEventListener('submit', function(evt) {
                    evt.preventDefault();
                    console.info('here');
                    // Send a XMLHttpRequest
                    var path = evt.target.getAttribute('action');
                    var data = new FormData(form);
                    console.info(data, form);
                    XMLHttpRequestHelper.sendRequest({method: 'post', path: path, params: data, onsuccess: function(response) {
                        console.info(response);
                    }, onerror: function(error) {
                        console.error(error);
                    }});

                    /*$.ajax({url: path, type: 'post', data: $(form).serialize()}).done(function(res) {
                        console.info(res);
                    });*/
                });
            });
        });
    </script>
{% endblock %}