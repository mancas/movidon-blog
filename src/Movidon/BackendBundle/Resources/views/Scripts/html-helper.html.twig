<script>
    var HTMLHelper = {
        init: function() {
            this._initFormEvents();
            this._initCloseEvents();
            this._initShakeElements();
            this._initDeleteAlertEvents();
            this._initEditActionEvents();
        },

        _initCloseEvents: function() {
            var closeTags = document.querySelectorAll('.close');
            Array.prototype.forEach.call(closeTags, function(tag) {
                tag.addEventListener('click', function(evt) {
                    evt.preventDefault();
                    tag.parentNode.classList.add('closed');
                });
            });
        },

        _initShakeElements: function() {
            var shakeElements = document.querySelectorAll('[data-shake="true"]');
            Array.prototype.forEach.call(shakeElements, function(elem) {
                elem.classList.add('shake');
            });
        },

        _initFormEvents: function() {
            var inputs = document.querySelectorAll('.form-control');
            Array.prototype.forEach.call(inputs, function(elem) {
                elem.addEventListener('focus', function(){
                    elem.parentNode.classList.add('toggled');
                });

                elem.addEventListener('blur', function(){
                    elem.parentNode.classList.remove('toggled');
                });
            });
        },

        _initDeleteAlertEvents: function() {
            var cancelBtn = document.querySelector('#dia-cancel');
            var deleteBtn = document.querySelector('#dia-delete');

            cancelBtn.addEventListener('click', function(evt) {
                evt.preventDefault();
                AlertHelper.close('#delete-item-alert');
            });

            var deleteBtns = document.querySelectorAll('.delete');
            Array.prototype.forEach.call(deleteBtns, function(btn) {
                btn.addEventListener('click', function(evt) {
                    evt.preventDefault();
                    deleteBtn.addEventListener('click', function callback(evt) {
                        evt.preventDefault();
                        deleteBtn.removeEventListener('click', callback);
                        window.location.href = btn.getAttribute('href');
                    });

                    AlertHelper.alert('#delete-item-alert');
                })
            });
        },

        _initEditActionEvents: function () {
            var editBtns = document.querySelectorAll('[data-action="edit"]');
            var self = this;

            Array.prototype.forEach.call(editBtns, function(btn) {
                btn.addEventListener('click', function(evt) {
                    evt.preventDefault();
                    var container = document.querySelector(btn.dataset.target + ' .p-block-body');
                    if (typeof container === 'undefined' || !container) {
                        return;
                    }
                    container.classList.add('edit-mode');

                    self._attachEventsToResetBtns(container);
                });
            });
        },

        _attachEventsToResetBtns: function(container) {
            var resetBtn = container.querySelector('button[type="reset"]');
            resetBtn.addEventListener('click', function onClick(evt) {
                evt.preventDefault();
                resetBtn.removeEventListener('click', onClick);

                container.classList.remove('edit-mode');
            })
        }
    };

    window.addEventListener('load', function() {
        HTMLHelper.init();
    });
</script>