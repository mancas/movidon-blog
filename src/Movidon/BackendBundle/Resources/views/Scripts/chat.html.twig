<script>
    var ChatHelper = {
        form: null,
        messagesContainer: null,
        titleContainer: null,
        deleteBtn: null,
        threads: null,

        init: function(form) {
            if (typeof form !== 'object') {
                this.form = document.querySelector('form#' + form);
                if (typeof this.form !== 'object') {
                    console.error('Form does not exists');
                    return;
                }
            }
            this.messagesContainer = document.querySelector('.card-chat-messages');
            this.titleContainer = document.querySelector('.chat-body .card-title h2');
            this.deleteBtn = document.querySelector('.chat-body .card-title .delete-thread');
            this.threads = document.querySelectorAll('.card-chat-thread .list-item');
            this._initSendEvents();
            this._initSelectThreadEvents();
        },

        _initSendEvents: function() {
            var sendBtn = document.querySelector('.send');
            var self = this;

            sendBtn.addEventListener('click', function(evt) {
                evt.preventDefault();
                var message = self.form.querySelector('textarea').value;
                if (message === '') {
                    return;
                }
                var path = sendBtn.href;
                var params = 'msg=' + message;
                var callback = function callback(evt) {
                    console.info(evt.target.response);
                    var response = JSON.parse(evt.target.responseText);
                    if (response.ok) {
                        self.appendMessage(message, response.avatar, response.time);
                        self.form.reset();
                    } else {
                        // Open error notification
                    }
                };
                self._sendRequest('post', path, params, callback);
            });
        },

        _initSelectThreadEvents: function() {
            var self = this;

            Array.prototype.forEach.call(this.threads, function (thread) {
                thread.addEventListener('click', function(evt) {
                    evt.preventDefault();
                    var message = self.form.querySelector('textarea').value;
                    if (message === '') {
                        return;
                    }
                    var path = thread.href;
                    var callback = function callback(evt) {
                        console.info(evt.target.response);
                        var response = JSON.parse(evt.target.responseText);
                        if (response.ok) {
                            self.updateThread(response.thread, response.name, response.avatar, response.threadId);
                            self.form.reset();
                        } else {
                            // Open error notification
                        }
                    };
                    self._sendRequest('get', path, null, callback);
                });
            });
        },

        _sendRequest: function(method, path, params, cb) {
            var xhr = new XMLHttpRequest();
            xhr.open(method, path, true);
            if (typeof params !== 'undefined' || params !== null) {
                xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
                xhr.setRequestHeader('Content-length', params.length);
                xhr.setRequestHeader('Connection', 'close');
                xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
            }
            xhr.send(params);

            xhr.onload = cb;

            xhr.onreadystatechange = function () {
                console.info(xhr.readyState);
            }
        },

        appendMessage: function(message, avatar, time) {
            var list = this.form.parentNode.parentNode.querySelector('ul.list-view');
            var li = document.createElement('li');
            li.className = 'right list-item transparent';
            var img = document.createElement('img');
            img.className = 'list-avatar pull-right';
            img.src = avatar;

            li.appendChild(img);

            var mediaBody = document.createElement('div');
            mediaBody.className = 'media-body';
            var listBubble = document.createElement('div');
            listBubble.className = 'list-bubble';
            var p = document.createElement('p');
            p.textContent = message;

            listBubble.appendChild(p);
            mediaBody.appendChild(listBubble);
            li.appendChild(mediaBody);

            var small = document.createElement('small');
            small.className = 'bubble-date';
            var i = document.createElement('i');
            i.className = 'fa fa-clock-o';

            small.appendChild(i);
            small.innerHTML += time;

            mediaBody.appendChild(small);
            list.appendChild(li);
            // TODO: Look for another way
            setTimeout(function() {
                li.classList.remove('transparent');
                list.scrollTop = list.scrollHeight;
            }, 100);
        },

        updateThread: function(thread, name, avatar, threadId) {
            this.messagesContainer.innerHTML = thread;
            var previousThread = document.querySelector('.card-chat-thread .active');
            var currentThread = document.querySelector('.card-chat-thread .list-item[data-id="' + threadId + '"]');

            previousThread.classList.remove('active');
            currentThread.classList.add('active');

            this.deleteBtn.dataset.id = threadId;

            if (typeof avatar !== 'undefined' && avatar !== null) {
                var userAvatar = document.createElement('img');
                userAvatar.src = avatar;
                this.titleContainer.innerHTML = avatar;
            } else {
                this.titleContainer.innerHTML = '';
            }

            this.titleContainer.innerHTML += name;
        }
    }
</script>