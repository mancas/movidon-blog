<div id="success-alert-sample" class="material-alert">
    <div class="material-alert-success">
        <span class="ma-tick line"></span>
        <span class="ma-tick-long line"></span>
    </div>
    <h2>Good job guy!</h2>
    <p>
        You've completed your work in a time record!
    </p>
    <button class="btn btn-blue">Ok</button>
</div>

<div id="warning-alert-sample" class="material-alert">
    <div class="material-alert-warning bigger">
        <span class="ma-warning-long line"></span>
        <span class="ma-warning-dot line"></span>
    </div>
    <h2>Are you sure?</h2>
    <p>
        You will not be able to undo this operation!
    </p>
    <button class="btn btn-default">Cancel</button>
    <button class="btn btn-red">Yes, delete it</button>
</div>

<div id="error-alert-sample" class="material-alert">
    <div class="material-alert-error">
        <span class="ma-error-long line"></span>
        <span class="ma-error-long-reverse line"></span>
    </div>
    <h2>You are not allowed to do that</h2>
    <p>
        Are you trying to access to a secured area?
    </p>
    <button class="btn btn-red">Take me away from here</button>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card-item card-indigo">
            <div class="card-title">
                <h2>Alert samples</h2>
            </div>
            <div class="card-description card-padding">
                <button data-alert="#success-alert-sample" class="btn btn-success">Success alert</button>
                <button data-alert="#warning-alert-sample" class="btn btn-warning">Warning alert</button>
                <button data-alert="#error-alert-sample" class="btn btn-danger">Error alert</button>
            </div>
        </div>
    </div>
</div>

<script>
    var AlertHelper = {
        overlay: null,
        currentAlert: null,

        alert: function(selector) {
            if (!this.overlay) {
                var overlay = document.createElement('div');
                overlay.className = 'material-alert-overlay';
                document.body.appendChild(overlay);
                this.overlay = overlay;
                this._addCloseListenerToOverlay();
            }

            this.currentAlert = document.querySelector(selector);
            if (!this.currentAlert) {
                console.error('Alert element does not exists');
                return;
            }

            this.overlay.classList.add('open');
            this.currentAlert.classList.add('open');
            this._dispatchEvent('ma-opened');
        },

        close: function(selector) {
            var alert = document.querySelector(selector);
            if (!alert.classList.contains('open') || alert !== this.currentAlert) {
                return;
            }

            this._close();
        },

        _close: function() {
            this.currentAlert.classList.remove('open');
            this.overlay.classList.remove('open');
            this._dispatchEvent('ma-closed');
        },

        _addCloseListenerToOverlay: function() {
            this.overlay.addEventListener('click', function(evt) {
                evt.preventDefault();
                if (this.currentAlert) {
                    this._close();
                }
            }.bind(this));
        },

        _dispatchEvent: function(evtType) {
            var event;
            // Supports IE
            if (typeof CustomEvent !== 'function') {
                event = document.createEvent('Event');
                event.initEvent(evtType, true, true);
            } else {
                event = new CustomEvent(evtType);
            }

            document.dispatchEvent(event);
        }
    };

    var alertBtns = document.querySelectorAll('button[data-alert]');

    Array.prototype.forEach.call(alertBtns, function(btn) {
        btn.addEventListener('click', function (evt) {
            evt.preventDefault();
            AlertHelper.alert(evt.target.dataset.alert);
        })
    });

</script>